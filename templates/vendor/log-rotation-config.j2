{# METADATA:
id: log-rotation-config
name: Log Rotation Configuration
description: Configure log rotation policies and cleanup procedures
estimated_duration: 20
risk_level: low
approval_required: false
dependencies: []
#}

# Log Rotation Configuration - {{ region.upper() }}

## Overview

Log rotation configuration procedure for **{{ azure_region }}** region.

### Log Management Context

- **Target Region**: {{ region.upper() }} ({{ azure_region }})
- **Environment**: {{ environment }}
- **Log Retention**: {{ log_retention_days | default(14) }} days
- **Compression**: {{ log_compression | default('gzip') }}

## Log Rotation Rules

### System Logs
```bash
# Configure logrotate for system logs
ansible {{ region }}_all -m copy -a "
  dest=/etc/logrotate.d/system-logs
  content='
/var/log/messages
/var/log/secure
/var/log/maillog
{
    daily
    rotate {{ log_retention_days | default(14) }}
    compress
    delaycompress
    missingok
    notifempty
    create 644 root root
}
'
"
```

### Application Logs
```bash
# Configure application log rotation
ansible {{ region }}_app -m copy -a "
  dest=/etc/logrotate.d/application
  content='
{{ app_log_path | default('/opt/app/logs') }}/*.log
{
    daily
    rotate {{ log_retention_days | default(14) }}
    compress
    delaycompress
    missingok
    notifempty
    create 644 appuser appuser
    postrotate
        systemctl reload application
    endscript
}
'
"
```

### Database Logs
```bash
# Configure database log rotation
ansible {{ region }}_db -m copy -a "
  dest=/etc/logrotate.d/mysql
  content='
/var/log/mysql/*.log
{
    daily
    rotate {{ log_retention_days | default(14) }}
    compress
    delaycompress
    missingok
    notifempty
    create 644 mysql mysql
    postrotate
        systemctl reload mysql
    endscript
}
'
"
```

## Immediate Cleanup

### Manual Log Cleanup
```bash
# Clean up old logs immediately
ansible {{ region }}_all -m shell -a "find /var/log -name '*.log' -mtime +{{ log_retention_days | default(14) }} -delete"
ansible {{ region }}_all -m shell -a "find /var/log -name '*.gz' -mtime +{{ log_retention_days | default(14) }} -delete"
```

---

**Generated**: {{ generated_at }}  
**Template**: {{ template_source }}  
**Region**: {{ region.upper() }} ({{ azure_region }})