{# METADATA:
id: monitoring-config
name: Monitoring Configuration
description: Configure monitoring dashboards and alerting rules
estimated_duration: 40
risk_level: medium
approval_required: true
dependencies: []
#}

# Monitoring Configuration - {{ region.upper() }}

## Overview

Monitoring configuration procedure for **{{ azure_region }}** region.

### Monitoring Context

- **Target Region**: {{ region.upper() }} ({{ azure_region }})
- **Environment**: {{ environment }}
- **Monitoring Platform**: Azure Monitor + Grafana
- **Alert Manager**: {{ 'alert-mgr-' + region + '.example.com' }}

## Dashboard Configuration

### System Dashboards
- **Infrastructure Overview**: CPU, Memory, Disk usage across all hosts
- **Application Performance**: Response times, error rates, throughput
- **Database Metrics**: Connection pools, query performance, replication lag
- **Network Monitoring**: Bandwidth utilization, packet loss, latency

### Alert Rules
```yaml
alerting_rules:
  - name: high_cpu_usage
    threshold: 85
    duration: 5m
    severity: warning
  - name: disk_space_low
    threshold: 90
    duration: 2m
    severity: critical
  - name: application_down
    threshold: 0
    duration: 1m
    severity: critical
```

## Deployment Steps

### Step 1: Dashboard Deployment
```bash
# Deploy Grafana dashboards
ansible {{ region }}_monitoring -m copy -a "src=dashboards/ dest=/etc/grafana/dashboards/"
ansible {{ region }}_monitoring -m systemd -a "name=grafana-server state=restarted"

# Configure Prometheus targets
ansible {{ region }}_monitoring -m template -a "src=prometheus.yml.j2 dest=/etc/prometheus/prometheus.yml"
ansible {{ region }}_monitoring -m systemd -a "name=prometheus state=restarted"
```

### Step 2: Alert Configuration
```bash
# Deploy alerting rules
ansible {{ region }}_monitoring -m copy -a "src=alert-rules/ dest=/etc/prometheus/rules/"
ansible {{ region }}_monitoring -m systemd -a "name=prometheus state=reloaded"

# Configure notification channels
ansible {{ region }}_monitoring -m template -a "src=alertmanager.yml.j2 dest=/etc/alertmanager/alertmanager.yml"
```

---

**Generated**: {{ generated_at }}  
**Template**: {{ template_source }}  
**Region**: {{ region.upper() }} ({{ azure_region }})