{# METADATA:
id: load-balancer-config
name: Load Balancer Configuration
description: Configure load balancer rules and health checks
estimated_duration: 35
risk_level: medium
approval_required: true
dependencies: []
#}

# Load Balancer Configuration - {{ region.upper() }}

## Overview

Load balancer configuration procedure for **{{ azure_region }}** region.

### Load Balancer Context

- **Target Region**: {{ region.upper() }} ({{ azure_region }})
- **Load Balancer**: {{ 'lb-' + region }}
- **Backend Pool**: {{ 'backend-pool-' + region }}

## Load Balancer Rules

### HTTP/HTTPS Rules
```bash
# Configure HTTP to HTTPS redirect
ansible {{ region }}_lb -m lineinfile -a "
  dest=/etc/nginx/sites-available/default
  regexp='listen 80'
  line='    listen 80; return 301 https://\$server_name\$request_uri;'
"

# Configure HTTPS backend
ansible {{ region }}_lb -m blockinfile -a "
  dest=/etc/nginx/sites-available/default
  marker='# {mark} HTTPS BACKEND'
  block='
upstream backend_{{ region }} {
    {% for server in backend_servers | default(['10.0.1.10', '10.0.1.11']) %}
    server {{ server }}:80 max_fails=3 fail_timeout=30s;
    {% endfor %}
}

server {
    listen 443 ssl http2;
    server_name {{ server_name | default('example.com') }};
    
    location / {
        proxy_pass http://backend_{{ region }};
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
    }
}
  '
"
```

### Health Checks
```bash
# Configure health check endpoint
ansible {{ region }}_lb -m blockinfile -a "
  dest=/etc/nginx/sites-available/default
  marker='# {mark} HEALTH CHECK'
  block='
    location /health {
        access_log off;
        return 200 \"healthy\";
        add_header Content-Type text/plain;
    }
  '
"
```

---

**Generated**: {{ generated_at }}  
**Template**: {{ template_source }}  
**Region**: {{ region.upper() }} ({{ azure_region }})